@page
@model QLNVSSV.WebApp.Pages.SendmailModel
@{
}

<style>
    .header {
        display: flex;
        justify-content: space-between;
    }
    .loadding {
        position: fixed;
        top: 0;
        width: 50px;
        top: 50%;
        left: 50%;
        z-index: 999;
    }

    .fullscreen {
        background: #ccc;
        position: fixed;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        opacity: 0.3;
        z-index: 999;
    }
</style>

<div class="header">
    <button onclick="Sendmail()" type="button" class="btn-sendmail btn btn-success">Gửi mail</button>
    <button type="button" class="btn-custommail btn btn-success">Tạo nội dung mail</button>
</div>

<table style="margin-top:20px" class="table">
    <thead>
        <tr>
            <th>
                <input id="allcheckbox" type="checkbox" onchange="checkall(this)" />
            </th>
            <th scope="col">ID</th>
            <th scope="col">Chức vụ</th>
            <th scope="col">Vị Trí</th>
            <th scope="col">Tên NV</th>
            <th scope="col">SDT</th>
            <th scope="col">Liên Hệ</th>
            <th scope="col">Thời gian PV</th>
            <th scope="col">Địa điểm PV</th>
            <th scope="col">Hành động</th>
        </tr>
    </thead>
    <tbody id="tablebody">
        @foreach (var item in Model.listEmployee)
        {
            <tr id="row_@item.EmployeeId">
                <td>
                    <input value="@item.EmployeeId" class="checktosendmail" type="checkbox" />
                </td>
                <td scope="col">@item.EmployeeId</td>
                <td scope="col">@item.TitleName</td>
                <td scope="col">@item.PositionName</td>
                <td id="eName_@item.EmployeeId" scope="col">@item.EmployeeName</td>
                <td scope="col">@item.PhoneNumber</td>
                <td scope="col">
                    <select class="form-control form-select" id="solidariry_@item.EmployeeId">
                        @switch (item.Solidarity)
                        {
                            case 0:
                                <option selected="selected" value="0">Chưa liên hệ</option>
                                <option value="1">Đã liên hệ</option>
                                <option value="2">Không liên hệ được</option>
                                break;
                            case 1:
                                <option value="0">Chưa liên hệ</option>
                                <option selected="selected" value="1">Đã liên hệ</option>
                                <option value="2">Không liên hệ được</option>
                                break;
                            case 2:
                                <option value="0">Chưa liên hệ</option>
                                <option value="1">Đã liên hệ</option>
                                <option selected="selected" value="2">Không liên hệ được</option>
                                break;
                        }

                    </select>
                </td>
                <td scope="col">
                    @{
                        var time = item.InterviewTime.ToString("yyyy-MM-dd HH:mm:ss").Replace(' ', 'T');
                        <div class="col-10">
                            <input class="form-control" type="datetime-local" value="@time" id="time_id_@item.EmployeeId">
                        </div>
                    }
                </td>
                <td scope="col">@item.InterviewAddress</td>
                <td scope="col">
                    <button onclick="modalpreview(@item.EmployeeId,@item.TitleId)" type="button" class="btn btn-outline-info" data-toggle="modal" data-target="#exampleModalCenter">Preview</button>
                    <button onclick="update(@item.EmployeeId)" type="button" class="btn btn-outline-success">Cập nhật</button>
                </td>
            </tr>
        }

    </tbody>
</table>
<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalmail">
                <form>
                    <div class="form-group">
                        <label for="exampleInputEmail1">Tiêu đề</label>
                        <input id="txttitle" type="email" class="form-control" aria-describedby="emailHelp" placeholder="" name="tieude">
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Nội dung</label>
                        <textarea id="txtcontent" class="form-control" name="noidung" cols="40" rows="5"></textarea>
                    </div>

                </form>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button onclick="savechage()" type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div id="fullscreen" class="fullscreen"></div>
<img id="loadding" class="loadding" src="~/Img/cupertino_activity_indicator.gif" />

<script>

    var full = document.getElementById('fullscreen');
    var load = document.getElementById('loadding');

    function endLoadding() {
        full.style.display = 'none'
        load.style.display = 'none'
    }
    function Loadding() {
        full.style.display = 'block'
        load.style.display = 'block'
    }

    endLoadding();


    function checkall(checkbox) {
        if (checkbox.checked == true) {
            var ckeckalltomail = document.getElementsByClassName('checktosendmail');
            for (var i = 0; i < ckeckalltomail.length; i++) {
                ckeckalltomail[i].checked = true
            }
        }
        else {
            var ckeckalltomail = document.getElementsByClassName('checktosendmail');
            for (var i = 0; i < ckeckalltomail.length; i++) {
                ckeckalltomail[i].checked = false
                obj = null;
            }
        }
    }
    function modalpreview(id, title) {
        console.log(id, status)

        var employeeName = document.getElementById('eName_' + id + '').textContent;
        var interviewTime = document.getElementById('time_id_' + id + '').value;
        var content = 'Chào ' + employeeName + '\n';
        fetch('http://localhost:37919/api/MailContent/GetMailForemployee/' + title + '')
            .then(response => response.json())
            .then(data => {
                $('#txttitle').val(data.title)

                content += data.content
                content += '\n Thời gian phỏng vấn dự kiến bắt đầu vào khoảng ' + interviewTime + ''
                $('#txtcontent').text(content)
            })

    }
    function update(employeeId) {

        var data = {
            employeeId: employeeId,
            solidarity: document.getElementById('solidariry_' + employeeId + '').value,
            interviewtime: document.getElementById('time_id_' + employeeId + '').value
        }
        fetch('http://localhost:37919/api/Employee/UpdateSolidarity', {
            method: 'PUT', // or 'PUT'
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
            .then(response => response.json())
            .then(data => {
                console.log(data)
                alert('Thành công!')
            })
    }

    function Sendmail() {

        Loadding()
        var ckeckalltomail = document.getElementsByClassName('checktosendmail');
        var arrID = [];
        for (var i = 0; i < ckeckalltomail.length; i++) {
            if (ckeckalltomail[i].checked == true) {
                console.log(ckeckalltomail[i].value)
                arrID.push(ckeckalltomail[i].value)
            }
        }
        var data = {
            listId: arrID
        }
        fetch('http://localhost:37919/api/MailContent/SendMail', {
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            method: "POST",
            body: JSON.stringify(data)
        })
            .then(response => response.json())
            .then(function (data) {
                console.log(data)
                endLoadding();
            })
    }
</script>